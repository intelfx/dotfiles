/*
 * Reminder: last binding wins (after matching contexts)
 *           this is used to overload goto-symbol between LSP and Sublime's native engine
 */
[
	{ "keys": ["alt+left"], "command": "jump_back" },
	{ "keys": ["alt+right"], "command": "jump_forward" },

	// Re-bind certain keys to NeoVintageous and Sublime
	// (those are bound by other plugins which we do not want)
	// NOTE: this must match my "vintageous_handle_keys"
	{ "keys": ["ctrl+shift+w"], "command": "close_window" },
	{ "keys": ["ctrl+r"], "command": "nv_feed_key", "args": {"key": "<C-r>"}},

	// replace ctrl+{R,r,g,;} as those are used by Vim
	{ "keys": ["alt+shift+r"], "command": "goto_symbol_in_project" },
	{ "keys": ["alt+r"], "command": "show_overlay", "args": {"overlay": "goto", "text": "@"} },
	{ "keys": ["alt+g"], "command": "show_overlay", "args": {"overlay": "goto", "text": ":"} },
	{ "keys": ["alt+;"], "command": "show_overlay", "args": {"overlay": "goto", "text": "#"} },

	// Open a terminal tab at current file directory
	{
		"keys": ["ctrl+w", "ctrl+t"], "command": "terminus_open", "args": {
			"cwd": "${file_path:${folder}}"
		}
	},

	// Document Symbols (a replacement for ST's "Goto Symbol")
	{
		"keys": ["alt+r"],
		"command": "lsp_document_symbols",
		"context": [{"key": "lsp.session_with_capability", "operand": "documentSymbolProvider"}]
	},
	// Workspace Symbols (a replacement for ST's "Goto Symbol In Project")
	{
		"keys": ["alt+shift+r"],
		"command": "lsp_workspace_symbols",
		"context": [{"key": "lsp.session_with_capability", "operand": "workspaceSymbolProvider"}]
	},

	// Run Code Lens
	{
		"keys": ["alt+d"],
		"command": "lsp_code_lens",
		"context": [{"key": "lsp.session_with_capability", "operand": "codeLensProvider"}]
	},
	// Trigger Signature Help
	{
		"keys": ["alt+q"],
		"command": "lsp_signature_help_show",
		/* this becomes false when triggering in a wrong position
		   (e.g. when trying to insert more parameters than allowed),
		   so disable to avoid randomly triggering the wrap action */
		//"context": [{"key": "lsp.signature_help_available"}]
	},
	// Find References
	{
		"keys": ["alt+x"],
		"command": "lsp_symbol_references",
		"args": {"side_by_side": false, "force_group": true, "fallback": false, "group": -1, "include_declaration": false},
		"context": [{"key": "lsp.session_with_capability", "operand": "referencesProvider"}]
	},
	// Find References (side-by-side)
	{
		"keys": ["alt+shift+x"],
		"command": "lsp_symbol_references",
		"args": {"side_by_side": true, "force_group": true, "fallback": false, "group": -1},
		"context": [{"key": "lsp.session_with_capability", "operand": "referencesProvider"}]
	},
	// Goto Declaration
	{
		"keys": ["alt+z"],
		"command": "lsp_symbol_declaration",
		"args": {"side_by_side": false, "force_group": true, "group": -1},
		"context": [
			{"key": "lsp.session_with_capability", "operand": "declarationProvider"},
			{"key": "auto_complete_visible", "operand": false}
		]
	},
	// Goto Definition
	{
		"keys": ["alt+shift+z"],
		"command": "lsp_symbol_definition",
		"args": {"side_by_side": false, "force_group": true, "fallback": false, "group": -1},
		"context": [
			{"key": "lsp.session_with_capability", "operand": "definitionProvider"},
			{"key": "auto_complete_visible", "operand": false}
		]
	},
	// Goto Type Definition
	{
		"keys": ["alt+t"],
		"command": "lsp_symbol_type_definition",
		"args": {"side_by_side": false, "force_group": true, "group": -1},
		"context": [
			{"key": "lsp.session_with_capability", "operand": "typeDefinitionProvider"},
			{"key": "auto_complete_visible", "operand": false}
		]
	},
	// Goto Type Definition (side-by-side)
	{
		"keys": ["alt+shift+t"],
		"command": "lsp_symbol_type_definition",
		"args": {"side_by_side": true, "force_group": true, "group": -1},
		"context": [
			{"key": "lsp.session_with_capability", "operand": "typeDefinitionProvider"},
			{"key": "auto_complete_visible", "operand": false}
		]
	},
	// Goto Implementation
	{
		"keys": ["alt+i"],
		"command": "lsp_symbol_implementation",
		"args": {"side_by_side": false, "force_group": true, "group": -1},
		"context": [
			{"key": "lsp.session_with_capability", "operand": "implementationProvider"},
			{"key": "auto_complete_visible", "operand": false}
		]
	},

	// YAML Nav's Goto Symbol (a replacement for ST's -- and LSP's -- "Goto Symbol")
	{
		"keys": ["alt+r"],
		"command": "goto_yaml_symbol",
		"context": [{"key": "selector", "operand": "source.yaml"}]
	},
]
