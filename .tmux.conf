#
# Basic things
#

# Vi mode
setw -g mode-keys vi
set -g status-keys vi

# Mouse
set -g mouse on

# enter copy-mode, but only if NOT mouse_any_flag (i. e. the program does not
# want mouse itself) AND NOT pane_in_mode (i. e. we are not yet entered copy mode)
# NB: `if -F` checks for non-empty string, so concatenation of the flags is an "OR" here
bind -n WheelUpPane if -Ft= '#{mouse_any_flag}#{pane_in_mode}' 'send-keys -M' 'copy-mode; send-keys -M'

# TODO: use `select-pane -t=` in Wheel{Up,Down}Pane handlers in copy-mode{,-vi} tables
#       to have scrolling focus follow mouse events

# Window titles
set -g set-titles on

# Default window title format is illegible, set it to something sane.
# #S: session name
# #h: short hostname (use #H for full hostname)
# #W: window name (set by auto-rename below, usually current command name or special mode in square brackets)
# #T: pane title (set by application running inside the pane, defaults to hostname)
# Do not show pane title (only window name) if pane title is default (== hostname).
# Likewise, do not show window name (only pane title) if pane title contains window name (== current command).
set -g set-titles-string "tmux (#S@#h): #{?#{==:#T,#H},#W,#{?#{m:*#W*,#T},#T,#W: #T}} #{session_alerts}"

setw -g automatic-rename on
setw -g allow-rename on
set -g base-index 1

# 500ms escape time is really excessive
# I use mosh where possible over slow links, so I'd like to think that it actually sends C1s as C1s
# (cf. https://unix.stackexchange.com/a/608179/21885)
set -g escape-time 10

# Shut up!
set -g bell-action none

# Fix terminal name issues
set -g default-terminal "tmux-256color"

# Enable status bar
bind s set status

# Scrollback buffer
set -g history-limit 100000

# I don't like gaps in window numbers.
set -g renumber-windows on

# don't use built-in clipboard/selection interface (see below)
set -g set-clipboard on

# Rebind select-pane commands to disable key repeat (really annoying)
bind Up select-pane -U
bind Down select-pane -D
bind Left select-pane -L
bind Right select-pane -R

#
# Copy mode
#

# Enter/exit
unbind [
bind Escape copy-mode

# General copy mode operations
unbind -T copy-mode-vi C-b # page-up
unbind -T copy-mode-vi C-f # page-down

bind -T copy-mode-vi C-v send-keys -X rectangle-toggle
bind -T copy-mode-vi Enter send-keys -X cancel
bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi V send-keys -X select-line

# Interface with X clipboard instead of using tmux's built-in selection/clipboard interface
# (tmux's selection/clipboard interface relies on non-standard terminfo extensions
#  to read/write system clipboard, which gnome-terminal does not support)
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xclip -se c -i"
# For reference, the original tmux selection/clipboard interface
bind -T copy-mode-vi Y send-keys -X copy-selection-and-cancel

# same interface can be done for mouse, but I don't like the idea that releasing mouse exits copy mode, so just get rid of it
unbind -T copy-mode-vi MouseDragEnd1Pane
#bind -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "xclip -se c -i"

# similarly, interface with X clipboard in the other direction
bind p run "xclip -se c -o | tmux load-buffer -btmp -" \; paste-buffer -btmp -d \; send-keys -X cancel
# similarly, for reference, the original tmux sesection/clipboard interface
unbind ]
bind P paste-buffer

# However, nested tmux will use this extension to pass copied selection to the parent tmux.
# Add keys to copy existing buffer contents to X clipboard.
bind C-o run "tmux show-buffer | xclip -se c -i"

bind C-f run "tmux-focus c #D"
bind C-u run "tmux-focus d #D"

# FIXME: drop `run "..."` wrapping around `tmux wait tmp` (pending release of https://github.com/tmux/tmux/commit/7339845c01727b209b3b96e5b1d917129b2c8a83)
# FIXME: drop `wait -S`/`wait` completely (pending resolution of https://github.com/tmux/tmux/issues/1517)
# FIXME: everything below broke somewhy
#bind -T copy-mode-vi x send-keys -X copy-pipe-and-cancel "curl -F 'f:1=<-' ix.io | xclip -se c -i"
#bind -T copy-mode-vi Y send-keys -X copy-pipe-and-cancel "tmux load-buffer -btmp -; tmux wait -S tmp" \; run "tmux wait tmp" \; show-buffer -btmp
#bind -T copy-mode-vi X send-keys -X copy-pipe-and-cancel "curl -F 'f:1=<-' ix.io | tmux load-buffer -btmp -; tmux wait -S tmp" \; run "tmux wait tmp" \; show-buffer -btmp

#
# Main key bindings
#

# screen forever
unbind C-b
set -g prefix C-a

# misc
bind r source-file ~/.tmux.conf
bind a send-prefix # C-a-a-a-a-a-aaaaaa!
bind m send-keys C-b # I'd bind 'b' for similarity with 'a', but 'b' is taken for previous-window
bind q kill-window \; kill-session
bind p paste-buffer
unbind &
bind X confirm-before -p "kill-window #W (y/n)?" kill-window # FIXME: find a way to move binding instead of hardcoding

# Pane splitting
unbind %
bind v split-window -h
bind V split-window -h -f
unbind '"'
bind h split-window -v
bind H split-window -v -f
unbind o

# Layouts
# mnemonic: vertical dash (pipe) for vertical split bar, horizontal dash for horizontal split bar
bind | select-layout even-horizontal
bind - select-layout even-vertical

# Organization
unbind .
bind . command-prompt "swap-window -t '%%'" # we use renumber-windows, default move-window is unusable in this configuration

# Pane navigation
bind z select-pane -t :.+ # switch to previous pane
bind -n C-n next-window
bind n next-window
bind -n C-b previous-window
bind b previous-window


#
# Appearance
#

# Statusbar
set -g status-position bottom
set -g status-interval 4
set -g status-left ''
set -g status-right ''
set -g status-justify centre # center align window list

setw -g status-style ''
setw -g window-status-format '#[bold,bg=black,fg=brightblack] #I #[bold,reverse,bg=black,fg=brightblack] #W  ' # gnome-terminal, urxvt
#setw -g window-status-format '#[bold,bg=black,fg=brightblack] #I #[bold,reverse,bg=default,fg=brightblack] #W  ' # PuTTY
setw -g window-status-current-format '#[fg=brightwhite,bg=cyan] #I #[fg=cyan,bg=default] #W  '

# Panel borders
set -g pane-border-style fg=black,bg=default
set -g pane-active-border-style fg=cyan,bg=default

# Resize
setw -g aggressive-resize on

# Restore pre-3.2 behavior: when more than one shared session is looking at the same window,
# limit window size to the smallest of shared sessions (instead of playing the tug-of-war).
set -g window-size latest
