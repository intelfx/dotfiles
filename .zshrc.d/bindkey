#!/bin/zsh

#
# 1. Put terminal in the "application mode"
# so that binding kcuu1/kcud1 etc. will work
# (these terminfo entries are written for application mode).
#

if [[ ${terminfo[smkx]} && ${terminfo[rmkx]} ]]; then

	function put_application_mode() {
		echoti smkx
	}

	function put_raw_mode() {
		echoti rmkx
	}

	zle -N zle-line-init put_application_mode
	zle -N zle-line-finish put_raw_mode

fi

#
# 2. Make aliases for keys from terminfo.
#

typeset -A terminfo_keys
terminfo_keys[Home]=${terminfo[khome]}
terminfo_keys[End]=${terminfo[kend]}
terminfo_keys[Insert]=${terminfo[kich1]}
terminfo_keys[Delete]=${terminfo[kdch1]}
terminfo_keys[Up]=${terminfo[kcuu1]}
terminfo_keys[Down]=${terminfo[kcud1]}
terminfo_keys[Left]=${terminfo[kcub1]}
terminfo_keys[Right]=${terminfo[kcuf1]}
terminfo_keys[PageUp]=${terminfo[kpp]}
terminfo_keys[PageDown]=${terminfo[knp]}

#
# 3. Setup vi keybindings and tune it to handle Home/End/Delete/Insert keys.
#

bindkey -v

zmodload zsh/terminfo
for keymap in viins vicmd; do
	bindkey -M $keymap ${terminfo_keys[Home]} beginning-of-line
	bindkey -M $keymap ${terminfo_keys[End]} end-of-line
	bindkey -M $keymap ${terminfo_keys[Delete]} vi-delete-char
done
unset keymap

bindkey -M vicmd ${terminfo_keys[Insert]} vi-add-next
bindkey -M viins ${terminfo_keys[Insert]} vi-cmd-mode
