#!/hint/zsh

function --git-rev-parse-first() {
	local arg
	for arg; do
		git rev-parse --quiet --verify --symbolic "$arg" && return
	done
}

function --git-rev-parse-silent() {
	local arg
	for arg; do
		git rev-parse --quiet --verify --symbolic "$arg" ||:
	done
}

alias gfe='git fetch --all --tags --prune'
alias grm='git rebase -i $(--git-rev-parse-first master main)'
alias grmb='git rebase --keep-base -i $(--git-rev-parse-first master@{u} main@{u})'
alias grd='git rebase -i develop'
alias grdb='git rebase -i --keep-base develop@{u}'
alias gru='git rebase -i @{u}'
alias grub='git rebase -i --keep-base @{u}'
alias gri='git rebase -i'
alias grib='git rebase -i --keep-base @{u}'
function grh { local _commits="${1:-0}"; shift; git rebase -i HEAD~$_commits "$@"; }
alias grc='git rebase --continue'
alias grs='git rebase --skip'
alias gra='git rebase --abort'
alias gam='git am'
alias gac='git am --continue'
alias gas='git am --skip'
alias gaa='git am --abort'
alias gcp='git cherry-pick'
alias gcpc='git cherry-pick --continue'
alias gcps='git cherry-pick --skip'
alias gcpa='git cherry-pick --abort'
alias gr='git reset'
alias grr='git reset HEAD~'
alias grhu='git reset --hard @{u}'
alias grhh='git reset --hard HEAD~'
alias gs='git status'
alias gd='git diff'
alias gds='git diff --stat'
alias gdc='git diff --cached'
alias gdcs='git diff --cached --stat'
alias gdsc='git diff --cached --stat'
alias gdS='git diff --submodule=log'
alias gdSc='git diff --cached --submodule=log'
alias gdcS='git diff --cached --submodule=log'
alias gl='git log'
alias gl1='git log -1'
alias glp='git log -p'
alias glp1='git log -p -1'
alias gls='git log --stat'
alias gls1='git log --stat -1'
alias glo='git log --oneline'
alias glo1='git log --oneline -1'
alias gsl='git stash list'
alias gss='git stash push'
alias gsS='git stash show'
alias gssp='git stash show --patch'
alias gsSp='git stash show --patch'
alias gsa='git stash apply'
alias gsp='git stash pop'
alias gsd='git stash drop'
alias gb='git branch'
alias gbf='git branch -f'
alias gba='git branch -a'
alias gbr='git branch -r'
alias gbl='git branch --list'
alias gre='git remote'
alias grev='git remote -v'
alias gfp='git format-patch'
alias gfp1='git format-patch -1'

alias gco='git checkout'
alias gcop='git checkout -p'
alias gcob='git checkout -b'
alias gcoB='git checkout -B'

alias gc='git commit'
alias gcn='git commit --no-edit'
alias gca='git commit -a'
alias gcA='git commit --amend'
alias gcAn='git commit --amend --no-edit'

alias gcAa='git commit --amend -a'
alias gcaA='git commit --amend -a'

alias gcAan='git commit --amend -a --no-edit'
alias gcaAn='git commit --amend -a --no-edit'

alias gcola='git-cola'
alias gk='gitk --all'
alias gg='gitg --all'

alias gad='git add'
alias ga='git add'
alias gadp='git add -p'
alias gap='git add -p'

alias gpu='git push'
alias gpuf='git push -f'
alias gpuu='git push -u'
alias gpuo='git push origin'
alias gpuuo='git push -u origin'

# generate --no-pager versions of (some) aliases
for k v in "${(@kv)aliases}"; do
	case "$v" in
	'git diff'*|\
	'git log'*|\
	'git branch'*\
	)
		alias "G${k#g}"="git --no-pager ${v#git }"
		;;
	esac
done

alias tig1='tig show'
alias tigl='TIGRC_USER=~/.tigrc.large tig'

compdef tg=tig
compdef tga=tig
compdef tgaa=tig
# "tig, with default set of refs"
function tg() {
	if (( $# ))
	then command tig --boundary "$@"
	else
		# always include HEAD@{u}, if it is defined
		local -a head
		head=( HEAD "${(@f)$(--git-rev-parse-silent 'HEAD@{u}')}" )
		command tig $head --branches --tags
	fi
}
# "tig, with almost all refs" (includes all remotes tracked by local branches)
function tga() {
	if (( $# ))
	then command tig --boundary "$@"
	else
		# FIXME: better heuristic?
		local -a remotes
		remotes=( "${(@f)$(git config --get-regexp 'branch\..+\.remote')}" )
		remotes=( "${(@)remotes##[^ ]## }" )
		command tig HEAD --branches --tags --remotes=${(u)^remotes}
	fi
}
# "tig, with _really_ all refs"
function tgaa() {
	if (( $# ))
	then command tig --boundary "$@"
	else command tig --all
	fi
}
alias tg1='tig show'
alias tgl='TIGRC_USER=~/.tigrc.large tg'
alias tgp='tig-pick'
alias tgpl='TIGRC_USER=~/.tigrc.large tig-pick'
