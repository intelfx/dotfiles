snippet pkgver-git-simple
	pkgver() {
		cd ${1:"\$pkgname"}
		git describe --long $0| sed 's/^v//;s/-/.r/;s/-/./'
	}

snippet pkgver-git
	pkgver() {
		cd ${1:"\$pkgname"}
		git describe --long $0| sed 's/^v//;s/[^-]*-g/r&/;s/-/./g'
	}

snippet pkgver-git-revcount
	pkgver() {
		cd ${1:"\$pkgname"}
		printf "r%s.%s" "\$(git rev-list --count HEAD)" "\$(git rev-parse --short HEAD)"
	}

snippet prepare-patches
	for p in "\${source[@]}"; do
		if [[ \${p} == *.patch ]]; then
			git apply "\${srcdir}/\${p}"
		fi
	done

snippet python-pep517
	makedepends=('python-build' 'python-installer' 'python-wheel')
	
	build() {
		cd ${1:"\$pkgname"}
		python -m build --wheel --no-isolation
	}
	
	package() {
		cd ${1:"\$pkgname"}
		python -m installer --destdir="\$pkgdir" dist/*.whl
	}

snippet python-setuptools
	makedepends=('python-setuptools')
	
	build() {
		cd ${1:"\$pkgname"}
		python setup.py build
	}
	
	package() {
		cd ${1:"\$pkgname"}
		python setup.py install --root="\$pkgdir" --skip-build --optimize=1
	}

snippet python-check
	check() {
		cd ${1:"\$pkgname"}
		local python_version=\$(python -c 'import sys; print("".join(map(str, sys.version_info[:2])))')

		PYTHONPATH="\$PWD/build/lib.linux-\$CARCH-cpython-\${python_version}" ${2:-pytest}
	}

snippet python-version
		local python_version=\$(python -c 'import sys; print(".".join(map(str, sys.version_info[:2])))')

snippet python-site-packages
		local site_packages=\$(python -c "import site; print(site.getsitepackages()[0])")
